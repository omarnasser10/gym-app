/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gymproject;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author Haneen
 */
public class SchedulerManagerPagee extends javax.swing.JFrame {
private ScheduleManager scheduleManager = new ScheduleManager();
    /**
     * Creates new form SchedulerManagerPagee
     */
    public SchedulerManagerPagee() {
        initComponents();
                setExtendedState(JFrame.MAXIMIZED_BOTH);

        this.setVisible(true);
           this.getContentPane().setBackground(Color.decode("#2B2738"));
                     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(43, 39, 56));
        jPanel1.setForeground(new java.awt.Color(255, 51, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1126, 786));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to Schedule Manager Page");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 908, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(617, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(110, 84, 181));
        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(51, 0, 51));
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(1198, 40));

        jMenu1.setText("Add Schedule");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Search Schedule");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Update Schedule");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Delete Schedule");
        jMenu4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Show Shedule");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu7.setText("Logout");
        jMenu7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu7MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1198, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        AddScheduleWindow addWindow = new AddScheduleWindow(scheduleManager);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        SearchScheduleWindow SearchScheduleWindow= new SearchScheduleWindow(scheduleManager);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        UpdateScheduleWindow UpdateScheduleWindow =new UpdateScheduleWindow(scheduleManager);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
       DeleteScheduleWindow DeleteScheduleWindow=new DeleteScheduleWindow(scheduleManager);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
    ShowScheduleWindow ShowScheduleWindow =new ShowScheduleWindow(scheduleManager);
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jMenu7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu7MouseClicked
        // TODO add your handling code here:
        int a=JOptionPane.showConfirmDialog(null, "do you really want to Logout","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            setVisible(false);
            new LoginPagee().setVisible(true);
        }
    }//GEN-LAST:event_jMenu7MouseClicked


   class AddScheduleWindow {
    private JFrame frame;
    private JTextField dateField, startTimeField, endTimeField, customerIdField, gymHallIdField, trainerIdField;
    private ScheduleManager scheduleManager;

    public AddScheduleWindow(ScheduleManager scheduleManager) {
        this.scheduleManager = scheduleManager;

        frame = new JFrame("Add Schedule");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // تعيين لون خلفية الإطار
        frame.getContentPane().setBackground(new Color(0x2B2738));  // اللون #2B2738

        // إعداد GroupLayout
        GroupLayout layout = new GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(layout);

        // إنشاء التصنيفات وحقول النصوص
        JLabel dateLabel = new JLabel("Date (YYYY-MM-DD):");
        dateLabel.setForeground(Color.WHITE);
        dateField = new JTextField();
        dateField.setBackground(new Color(0x3B364C));
        dateField.setForeground(Color.WHITE);
        dateField.setPreferredSize(new Dimension(200, 30));

        JLabel startTimeLabel = new JLabel("Start Time (HH:MM):");
        startTimeLabel.setForeground(Color.WHITE);
        startTimeField = new JTextField();
        startTimeField.setBackground(new Color(0x3B364C));
        startTimeField.setForeground(Color.WHITE);
        startTimeField.setPreferredSize(new Dimension(200, 30));

        JLabel endTimeLabel = new JLabel("End Time (HH:MM):");
        endTimeLabel.setForeground(Color.WHITE);
        endTimeField = new JTextField();
        endTimeField.setBackground(new Color(0x3B364C));
        endTimeField.setForeground(Color.WHITE);
        endTimeField.setPreferredSize(new Dimension(200, 30));

        JLabel customerIdLabel = new JLabel("Customer ID:");
        customerIdLabel.setForeground(Color.WHITE);
        customerIdField = new JTextField();
        customerIdField.setBackground(new Color(0x3B364C));
        customerIdField.setForeground(Color.WHITE);
        customerIdField.setPreferredSize(new Dimension(200, 30));

        JLabel gymHallIdLabel = new JLabel("Gym Hall ID:");
        gymHallIdLabel.setForeground(Color.WHITE);
        gymHallIdField = new JTextField();
        gymHallIdField.setBackground(new Color(0x3B364C));
        gymHallIdField.setForeground(Color.WHITE);
        gymHallIdField.setPreferredSize(new Dimension(200, 30));

        JLabel trainerIdLabel = new JLabel("Trainer ID:");
        trainerIdLabel.setForeground(Color.WHITE);
        trainerIdField = new JTextField();
        trainerIdField.setBackground(new Color(0x3B364C));
        trainerIdField.setForeground(Color.WHITE);
        trainerIdField.setPreferredSize(new Dimension(200, 30));

        // زر إضافة الجدول
        JButton addButton = new JButton("Add Schedule");
        addButton.setBackground(new Color(0x6E54B5));
        addButton.setForeground(new Color(0xFCFCFA));
        addButton.setPreferredSize(new Dimension(150, 40));
        addButton.addActionListener(e -> addSchedule());

        // ترتيب المكونات باستخدام GroupLayout
        layout.setAutoCreateGaps(true);
        layout.setAutoCreateContainerGaps(true);

        // ترتيب التصنيفات وحقول النصوص عموديًا
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(dateLabel)
                .addComponent(dateField)
                .addComponent(startTimeLabel)
                .addComponent(startTimeField)
                .addComponent(endTimeLabel)
                .addComponent(endTimeField)
                .addComponent(customerIdLabel)
                .addComponent(customerIdField)
                .addComponent(gymHallIdLabel)
                .addComponent(gymHallIdField)
                .addComponent(trainerIdLabel)
                .addComponent(trainerIdField)
                .addComponent(addButton)
        );

        layout.setVerticalGroup(
            layout.createSequentialGroup()
                .addComponent(dateLabel)
                .addComponent(dateField)
                .addComponent(startTimeLabel)
                .addComponent(startTimeField)
                .addComponent(endTimeLabel)
                .addComponent(endTimeField)
                .addComponent(customerIdLabel)
                .addComponent(customerIdField)
                .addComponent(gymHallIdLabel)
                .addComponent(gymHallIdField)
                .addComponent(trainerIdLabel)
                .addComponent(trainerIdField)
                .addComponent(addButton)
        );
//addButton.addActionListener(e -> addSchedule());
        frame.pack();
        frame.setLocationRelativeTo(null); // تعيين النافذة في المنتصف
        frame.setVisible(true);
        
    }

   


    private void addSchedule() {
        String date = dateField.getText();
        String startTime = startTimeField.getText();
        String endTime = endTimeField.getText();
        String customerIdStr = customerIdField.getText();
        String gymHallIdStr = gymHallIdField.getText();
        String trainerIdStr = trainerIdField.getText();

        // Check if all fields are filled
        if (date.isEmpty() || startTime.isEmpty() || endTime.isEmpty() ||
                customerIdStr.isEmpty() || gymHallIdStr.isEmpty() || trainerIdStr.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "All fields must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Try to parse the IDs to integers
        try {
            int customerId = Integer.parseInt(customerIdStr);
            int gymHallId = Integer.parseInt(gymHallIdStr);
            int trainerId = Integer.parseInt(trainerIdStr);

            // Create a new schedule and add it to the manager
            Schedule schedule = new Schedule(date, startTime, endTime, customerId, trainerId, gymHallId);
            if (new Gym_Hall().getId() != gymHallId) {
                JOptionPane.showMessageDialog(frame, "Gym Hall ID is incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (!new CustomerManager().search_by_id("" + customerId)) {
                JOptionPane.showMessageDialog(frame, "Customer ID not found", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (!new TrainerManager().search_by_id("" + trainerId)) {
                JOptionPane.showMessageDialog(frame, "Trainer ID not found", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                scheduleManager.add(schedule);
                JOptionPane.showMessageDialog(frame, "Schedule added successfully!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                dateField.setText("");
                startTimeField.setText("");
                customerIdField.setText("");
                gymHallIdField.setText("");
                trainerIdField.setText("");
                frame.dispose();
            }

        } catch (NumberFormatException e) {
            // Handle the error if IDs are not valid integers
            JOptionPane.showMessageDialog(frame, "Customer ID, Gym Hall ID, and Trainer ID must be valid integers.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}


// Class for searching a schedule
class SearchScheduleWindow {
    private JFrame frame;
    private JTextField searchIdField;
    private ScheduleManager scheduleManager;

    public SearchScheduleWindow(ScheduleManager scheduleManager) {
        this.scheduleManager = scheduleManager;

        frame = new JFrame("Search Schedule");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Set the background color of the frame
        frame.getContentPane().setBackground(new Color(0x2B2738));  // color #2B2738

        // Set up FlowLayout to align components in the center
        FlowLayout flowLayout = new FlowLayout(FlowLayout.CENTER, 10, 10);
        JPanel panel = new JPanel(flowLayout);
        panel.setBackground(new Color(0x2B2738));  // Set the JPanel background to the same color
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        // Create labels and text fields
        JLabel idLabel = new JLabel("Schedule ID:");
        idLabel.setForeground(Color.WHITE); // Set the label text color

        searchIdField = new JTextField();
        searchIdField.setBackground(new Color(0x3B364C)); // Set the background of the text field to #3B364C
        searchIdField.setForeground(Color.WHITE); // Set the text color inside the text field
        searchIdField.setPreferredSize(new Dimension(150, 30)); // Set the size

        JButton searchButton = new JButton("Search");
                //searchButton.addActionListener(e -> searchSchedule());
        searchButton.setBackground(new Color(0x6E54B5)); // Set the button background color
        searchButton.setForeground(new Color(0xFCFCFA)); // Set the text color inside the button
        searchButton.setPreferredSize(new Dimension(100, 30)); // Set the size
        searchButton.addActionListener(e -> searchSchedule());
  
        // Add components to the JPanel
        panel.add(idLabel);
        panel.add(searchIdField);
        panel.add(searchButton);
        panel.add(new JLabel()); // Empty placeholder
        
  

        // Add the JPanel to the JFrame
        frame.add(panel);

        // Set the frame size to fit the components
        frame.pack(); // Adjust size automatically according to content
        frame.setLocationRelativeTo(null); // Center the frame on the screen
        frame.setVisible(true);
    }


  private void searchSchedule() {
        String id = searchIdField.getText();
        try{
            int SchId = Integer.parseInt(id);
         if (id.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "ID field must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (scheduleManager.search_by_id(id)) {
            JOptionPane.showMessageDialog(frame, "Schedule with ID " + id + " found!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);searchIdField.setText("");
        } else {
            JOptionPane.showMessageDialog(frame, "Schedule with ID " + id + " not found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        frame.dispose(); // Close the window after searching
        }catch (NumberFormatException e) {
            // Handle the error if IDs are not valid integers
            JOptionPane.showMessageDialog(frame, "Schedule ID must be valid integers.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}

// Class for updating a schedule

    class UpdateScheduleWindow {
    private JFrame frame;
    private JTextField updateIdField, updateOldField, updateNewField;
    private ScheduleManager scheduleManager;

    public UpdateScheduleWindow(ScheduleManager scheduleManager) {
        this.scheduleManager = scheduleManager;

        // Create the frame for Update Schedule window
        frame = new JFrame("Update Schedule");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        // Set the background color of the frame
        frame.getContentPane().setBackground(new Color(0x2B2738));  // color #2B2738

        // Set up GroupLayout
        GroupLayout layout = new GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(layout);

        // Create the labels and text fields for Schedule ID, Old Value, and New Value
        JLabel updateIdLabel = new JLabel("Schedule ID:");
        updateIdLabel.setForeground(Color.WHITE);
        updateIdField = new JTextField();
        updateIdField.setBackground(new Color(0x3B364C));
        updateIdField.setForeground(Color.WHITE);
        updateIdField.setPreferredSize(new Dimension(200, 30));

        JLabel updateOldLabel = new JLabel("Old Value:");
        updateOldLabel.setForeground(Color.WHITE);
        updateOldField = new JTextField();
        updateOldField.setBackground(new Color(0x3B364C));
        updateOldField.setForeground(Color.WHITE);
        updateOldField.setPreferredSize(new Dimension(200, 30));

        JLabel updateNewLabel = new JLabel("New Value:");
        updateNewLabel.setForeground(Color.WHITE);
        updateNewField = new JTextField();
        updateNewField.setBackground(new Color(0x3B364C));
        updateNewField.setForeground(Color.WHITE);
        updateNewField.setPreferredSize(new Dimension(200, 30));

        // Create the Update button
        JButton updateButton = new JButton("Update Schedule");
        updateButton.setBackground(new Color(0x6E54B5));
        updateButton.setForeground(new Color(0xFCFCFA));
        updateButton.setPreferredSize(new Dimension(150, 40));
        updateButton.addActionListener(e -> updateSchedule());

        // Set up the layout for components
        layout.setAutoCreateGaps(true);
        layout.setAutoCreateContainerGaps(true);

        // Organize the components vertically
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(updateIdLabel)
                .addComponent(updateIdField)
                .addComponent(updateOldLabel)
                .addComponent(updateOldField)
                .addComponent(updateNewLabel)
                .addComponent(updateNewField)
                .addComponent(updateButton)
        );

        layout.setVerticalGroup(
            layout.createSequentialGroup()
                .addComponent(updateIdLabel)
                .addComponent(updateIdField)
                .addComponent(updateOldLabel)
                .addComponent(updateOldField)
                .addComponent(updateNewLabel)
                .addComponent(updateNewField)
                .addComponent(updateButton)
        );

        // Set the frame size and center it on the screen
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    // Method to update the schedule (implement logic here)
 


    // Method to update the schedule, logic to be implemented
   


    private void updateSchedule() {
        String idStr = updateIdField.getText();
        String oldValue = updateOldField.getText();
        String newValue = updateNewField.getText();

        if (idStr.isEmpty() || oldValue.isEmpty() || newValue.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "All fields must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(idStr);

            if (!scheduleManager.search_by_id("" + id)) {
                JOptionPane.showMessageDialog(frame, "Schedule ID not found", "Error", JOptionPane.ERROR_MESSAGE);
                
            } else if (!scheduleManager.show_by_id("" + id).contains(oldValue)) {
                JOptionPane.showMessageDialog(frame, "Old value not found", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                scheduleManager.update(id, oldValue, newValue);
                JOptionPane.showMessageDialog(frame, "Schedule updated successfully!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                updateIdField.setText("");
                updateOldField.setText("");
                updateNewField.setText("");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(frame, "Schedule ID must be a valid integer.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        frame.dispose();
    }
}

// Class for deleting a schedule
class DeleteScheduleWindow {
    private JFrame frame;
    private JTextField deleteIdField;
    private ScheduleManager scheduleManager;

    public DeleteScheduleWindow(ScheduleManager scheduleManager) {
        this.scheduleManager = scheduleManager;

        // Create the frame for Delete Schedule window
        frame = new JFrame("Delete Schedule");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(400, 300);

        // Set the background color of the frame
        frame.getContentPane().setBackground(new Color(0x2B2738));  // color #2B2738

        // Create JPanel and set up the layout
        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10)); // Use FlowLayout to arrange components
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Add padding to the panel
        panel.setBackground(new Color(0x2B2738)); // Set the background color of the panel

        // Create the label and text field for Schedule ID
        JLabel idLabel = new JLabel("Schedule ID:");
        idLabel.setForeground(Color.WHITE); // Set the label text color

        deleteIdField = new JTextField();
        deleteIdField.setBackground(new Color(0x3B364C)); // Set the background color of the text field
        deleteIdField.setForeground(Color.WHITE); // Set the text color inside the text field
        deleteIdField.setPreferredSize(new Dimension(150, 30)); // Set the preferred size of the text field

        // Create the delete button
        JButton deleteButton = new JButton("Delete");
        deleteButton.setBackground(new Color(0x6E54B5)); // Set the button background color
        deleteButton.setForeground(new Color(0xFCFCFA)); // Set the text color inside the button
        deleteButton.setPreferredSize(new Dimension(100, 30)); // Set the preferred size of the button
        deleteButton.addActionListener(e -> deleteSchedule()); // Add action listener to delete schedule

        // Add components to the JPanel
        panel.add(idLabel);
        panel.add(deleteIdField);
        panel.add(deleteButton);

        // Add the JPanel to the JFrame
        frame.add(panel);

        // Center the frame on the screen
        frame.setLocationRelativeTo(null);

        // Set the frame visibility
        frame.setVisible(true);
        frame.pack();
    }
    


    // Method to delete the schedule 


    private void deleteSchedule() {
        String id = deleteIdField.getText();
        try{
            int SchId = Integer.parseInt(id);
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "ID field must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            scheduleManager.delete(id);
            JOptionPane.showMessageDialog(frame, "Schedule deleted successfully!", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
            deleteIdField.setText("");
        }catch (NumberFormatException e) {
            // Handle the error if IDs are not valid integers
            JOptionPane.showMessageDialog(frame, "Schedule ID must be valid integers.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        frame.dispose(); // Close the window after deleting
    }

}
// Class for showing a schedule
class ShowScheduleWindow {
    private JFrame frame;
    private JTextField showIdField;
    private ScheduleManager scheduleManager;

    public ShowScheduleWindow(ScheduleManager scheduleManager) {
        this.scheduleManager = scheduleManager;

        // Create the frame for Show Schedule window
        frame = new JFrame("Show Schedule");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(400, 300);

        // Set the background color of the frame
        frame.getContentPane().setBackground(new Color(0x2B2738));  // color #2B2738

        // Create JPanel and set up the layout
        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10)); // Use FlowLayout to arrange components
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Add padding to the panel
        panel.setBackground(new Color(0x2B2738)); // Set the background color of the panel

        // Create the label and text field for Schedule ID
        JLabel idLabel = new JLabel("Schedule ID:");
        idLabel.setForeground(Color.WHITE); // Set the label text color

        showIdField = new JTextField();
        showIdField.setBackground(new Color(0x3B364C)); // Set the background color of the text field
        showIdField.setForeground(Color.WHITE); // Set the text color inside the text field
        showIdField.setPreferredSize(new Dimension(150, 30)); // Set the preferred size of the text field

        // Create the show button
        JButton showButton = new JButton("Show");
        showButton.setBackground(new Color(0x6E54B5)); // Set the button background color
        showButton.setForeground(new Color(0xFCFCFA)); // Set the text color inside the button
        showButton.setPreferredSize(new Dimension(100, 30)); // Set the preferred size of the button
        showButton.addActionListener(e -> showSchedule()); // Add action listener to show schedule

        // Add components to the JPanel
        panel.add(idLabel);
        panel.add(showIdField);
        panel.add(showButton);

        // Add the JPanel to the JFrame
        frame.add(panel);

        // Center the frame on the screen
        frame.setLocationRelativeTo(null);

        // Set the frame visibility
        frame.setVisible(true);
    }

    // Method to show the schedule 
   

   private void showSchedule() {
        String id = showIdField.getText();
        try{
            int SchId = Integer.parseInt(id);
            String result = scheduleManager.show_by_id(id);
            if(new ScheduleManager().search_by_id(id))
                JOptionPane.showMessageDialog(frame, result, "Schedule Details", JOptionPane.INFORMATION_MESSAGE);
            else JOptionPane.showMessageDialog(frame, result, "Schedule Details", JOptionPane.ERROR_MESSAGE);
        }catch (NumberFormatException e) {
            // Handle the error if IDs are not valid integers
            JOptionPane.showMessageDialog(frame, "Schedule ID must be valid integers.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        frame.dispose(); // Close the window after showing
    }
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
